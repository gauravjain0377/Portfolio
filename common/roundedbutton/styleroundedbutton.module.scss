.roundedButton{
    border-radius: 3em;
    border: 2px solid var(--border-color);
    cursor: pointer;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 12px 40px 12px 40px;
    background-color: var(--bg-secondary);
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px var(--shadow-light);
    min-height: 48px;

    p{
        position: relative;
        z-index: 12;
        transition: color 0.4s linear;
        color: var(--text-primary);
        margin: 0;
        line-height: 1.2;
        text-align: center;
    }

    &:hover{
        p{
            color: white !important; /* Force white text on hover */
        }
        border-color: var(--accent-color) !important; /* Force accent color border */
        background-color: var(--accent-color) !important; /* Force accent color background */
        transform: translateY(-2px);
        box-shadow: 0 4px 16px var(--shadow-medium);
        
        /* Ensure accent color is maintained in both light and dark modes */
        [data-theme="light"] & {
            background-color: var(--accent-color) !important;
            border-color: var(--accent-color) !important;
        }
        
        [data-theme="dark"] & {
            background-color: var(--accent-color) !important;
            border-color: var(--accent-color) !important;
        }
        
        /* Override any inline styles */
        &[style*="background-color"] {
            background-color: var(--accent-color) !important;
            border-color: var(--accent-color) !important;
        }
    }
    
    /* Active state to maintain accent color */
    &:active {
        background-color: var(--accent-color) !important;
        border-color: var(--accent-color) !important;
        transform: translateY(-1px);
    }
    
    /* Focus state to maintain accent color */
    &:focus {
        background-color: var(--accent-color) !important;
        border-color: var(--accent-color) !important;
        outline: none;
    }
    
    /* Override any theme-based background color changes */
    &[style*="background-color"]:hover {
        background-color: var(--accent-color) !important;
        border-color: var(--accent-color) !important;
    }
    
    /* Ensure accent color persists during hover animation */
    &:hover .circle {
        background-color: var(--accent-color) !important;
    }
    
    /* Force accent color on hover regardless of any other styles */
    &:hover,
    &:hover[style*="background-color"],
    &:hover[style*="border-color"] {
        background-color: var(--accent-color) !important;
        border-color: var(--accent-color) !important;
    }
    
    /* Maximum specificity override for hover state */
    &.roundedButton:hover {
        background-color: var(--accent-color) !important;
        border-color: var(--accent-color) !important;
    }
    
    /* Override any potential conflicting styles */
    &:hover {
        background-color: var(--accent-color) !important;
        border-color: var(--accent-color) !important;
    }
}

.circle{
    width: 100%;
    height: 150%;
    position: absolute;
    border-radius: 50%;
    top: 100%;
    z-index: -1;
    transition: background-color 0.3s ease;
}

// Responsive adjustments for better card sizing
@media (max-width: 768px) {
  .roundedButton {
    padding: 10px 32px 10px 32px;
    min-height: 44px;
  }
}

@media (max-width: 480px) {
  .roundedButton {
    padding: 8px 28px 8px 28px;
    min-height: 40px;
    
    p {
      font-size: 14px;
    }
  }
}

@media (max-width: 360px) {
  .roundedButton {
    padding: 6px 24px 6px 24px;
    min-height: 36px;
    
    p {
      font-size: 13px;
    }
  }
}